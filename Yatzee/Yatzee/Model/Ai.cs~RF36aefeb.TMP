using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Yatzee.View;

namespace Yatzee.Model
{
    class Ai
    {
        private int TotalScore;
        Player Player;
        List<int> ComputerRoll;
        DiceRule Rule;
        Dice Roll;
        int computervalue;
        Random random;
        ViewStatus Show;
        int computerPickDice;
        bool reroll = false;
        public Ai(Player player, DiceRule rule, Dice roll, ViewStatus show)
        {
            Player = player;
            Roll = roll;
            Rule = rule;
            random = new Random();
            Show = show;
        }
        public bool AiTurn(bool playerdone)
        {
            if (!playerdone)
            {
                RollDice(Roll);

            }
            return false;
        }
        public bool ComputerWin()
        {
            if (TotalScore > Player.TOTALSCORE)
            {
                return true;
            }

            return false;
        }
        public void RollDice(Dice Roll)
        {

           
            //AIN har en lista
            //List<int> storedDiceValues = List<int>();
            //storedeDiceValues.Add(value1, value2); t.ex. två sexor
            //if(value3 != value1)
            bool aiTrue = false;
            List<int> AiRoll = Roll.Roll();
            foreach (int jan in AiRoll)
            {
                Console.WriteLine("Computer Rolled{0}", jan);
            }
    
            int[] AiArray = new int[5];
            int maxvalue = AiRoll.Max();
            maxvalue = random.Next(1, 6);
            AiArray.Contains(Rule.AddUpDice(AiRoll, maxvalue));
            
            //List<int> storedDiceValues = new List<int>();
            for (int i = 0; i < AiRoll.Count; i++)
            {
                AiArray[i] = AiRoll[i];
            }

                
            
           
        }
    }
}
